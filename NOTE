# NOTE
# Changes within the original sarp
# to make it work on Ubuntu 12.04 with
# Linux kernel 3.2.0.56 x86_64
# Oct 28, 2013
# daveti@cs.uoregon.edu
# http://davejingtian.org

0. Extra libutil.a under ./lib
If you want to build yourself,
here it is...
-------------------------------
a. Extra pkgs/tools
apt-get install flex
apt-get install bison
apt-get isstall libdb-dev
git clone https://github.com/vnrick/iproute2 master

b. Build the iproute2 pkg by yourself
apt-get install iproute
apt-get install iproute-dev
All the cmds above could install the libnetlink. But we also need libutil.a. It seems the Ubuntu customized pkg would not install the corresponding libutil.a.
-------------------------------

1. Add libutil.a into ./src/Makefile for sarpd linkage
am_sarpd_OBJECTS = sarpd-sad_main.$(OBJEXT) sarpd-sad_debug.$(OBJEXT) \
        sarpd-sad_error.$(OBJEXT) sarpd-sad_signal.$(OBJEXT) \
        sarpd-sad_globals.$(OBJEXT) sarpd-sad_parser.$(OBJEXT) \
        sarpd-sad_syslog.$(OBJEXT) sarpd-sad_capture.$(OBJEXT) \
        sarpd-sad_conf.$(OBJEXT) sarpd-sad_hash.$(OBJEXT) \
        sarpd-sad_sarp.$(OBJEXT) sarpd-sad_neigh.$(OBJEXT) \
        sarpd-sad_inet.$(OBJEXT) sarpd-sad_crypto.$(OBJEXT) \
        sarpd-sarp_crypto.$(OBJEXT) sarpd-sad_key.$(OBJEXT) \
        sarpd-strlcpy.$(OBJEXT) sarpd-strlcat.$(OBJEXT) \
        ../lib/libutil.a

2. Changes in sad_neigh.c
Define the inet_prefix struct
Define the signature of get_addr()

3. Changes in sarp kernel module
Big changes in the Makefile
Update the sarp.ko to use /proc/sarp

4. Changes in src
Update the source to use /proc/sarp

5. Changes in sad_main.c
Update the dev from "eth0" to "eth1"

6. How to play with SARP
a. insmod sarp.ko to add the /proc/sarp entry
b. key generation for each machine~
daveti@arpsec04:~/sarp/master/src$ ./sarp -h

Usage: sarp [OPTIONS] 

General options:
  -b, --bitlen <NUM>           number of bit for the key (def. 1024)

  -g, --genkey                 generate a keypair
  -s, --sign                   generate a signed info file
  -o, --outfile <FILE>         specify the output filename for keypair

  -c, --check                  check if the keypair is valid
  -i, --infile <FILE>          specify the input filename for keypair verification

  -v, --verbose                be verbose during operations

  -V, --version                prints the version and exit
  -h, --help                   this help screen

c. configure the config file for sarpd
./etc/sarpd/*
d. start the sarpd
root@arpsec04:/home/daveti/sarp/master/src# ./sarpd -h

Usage: sarpd [OPTIONS] 

General options:
  -A, --akd-mode               use this daemon as the AKD

  -p, --prefix <PATH>          use this prefix to find config files
  -c, --conf <FILE>            load configuration from this file
  -k, --known_hosts <FILE>     load known_hosts from this file

  -v, --version                prints the version and exit
  -h, --help                   this help screen

7. Running suite in action
./run

8. Difference between public key files under ./hosts and the private key file for each sarpd
private key file for sarpd - generated by sarp -g -o directly
public key files for each machine - generated by sarp -g -o and with the modification with IP/LL

