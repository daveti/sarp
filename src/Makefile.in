# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
COPTS = @COPTS@
DEPDIR = @DEPDIR@
EB = @EB@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
OPENSSL_PATH = @OPENSSL_PATH@
PACKAGE = @PACKAGE@
PROCNETSARP = @PROCNETSARP@
PROG = @PROG@
SAD_CFLAGS = @SAD_CFLAGS@
SAD_LIBS = @SAD_LIBS@
SARP_CFLAGS = @SARP_CFLAGS@
SARP_LIBS = @SARP_LIBS@
SB = @SB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
AUTOMAKE_OPTIONS = foreign #no-dependencies

DISTCLEANFILES = *~

sbin_PROGRAMS = sarpd sarp

sarpd_SOURCES = sad_main.c \
                sad_debug.c \
                sad_error.c \
                sad_signal.c \
                sad_globals.c \
                sad_parser.c \
                sad_syslog.c \
                sad_capture.c \
                sad_conf.c \
                sad_hash.c \
                sad_sarp.c \
                sad_neigh.c \
                sad_inet.c \
                sad_crypto.c \
                sarp_crypto.c \
                sad_key.c \
                missing/strlcpy.c \
                missing/strlcat.c 


sarpd_CFLAGS = @SAD_CFLAGS@

sarpd_LDADD = @SAD_LIBS@

CLEANFILES = *.log *.out core.*

sarp_SOURCES = sarp_main.c \
               sarp_error.c \
               sarp_parser.c \
               sarp_globals.c \
               sarp_crypto.c 


sarp_CFLAGS = @SARP_CFLAGS@

sarp_LDADD = @SARP_LIBS@
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
sbin_PROGRAMS = sarpd$(EXEEXT) sarp$(EXEEXT)
PROGRAMS = $(sbin_PROGRAMS)

am_sarp_OBJECTS = sarp-sarp_main.$(OBJEXT) sarp-sarp_error.$(OBJEXT) \
	sarp-sarp_parser.$(OBJEXT) sarp-sarp_globals.$(OBJEXT) \
	sarp-sarp_crypto.$(OBJEXT)
sarp_OBJECTS = $(am_sarp_OBJECTS)
sarp_DEPENDENCIES =
sarp_LDFLAGS =
am_sarpd_OBJECTS = sarpd-sad_main.$(OBJEXT) sarpd-sad_debug.$(OBJEXT) \
	sarpd-sad_error.$(OBJEXT) sarpd-sad_signal.$(OBJEXT) \
	sarpd-sad_globals.$(OBJEXT) sarpd-sad_parser.$(OBJEXT) \
	sarpd-sad_syslog.$(OBJEXT) sarpd-sad_capture.$(OBJEXT) \
	sarpd-sad_conf.$(OBJEXT) sarpd-sad_hash.$(OBJEXT) \
	sarpd-sad_sarp.$(OBJEXT) sarpd-sad_neigh.$(OBJEXT) \
	sarpd-sad_inet.$(OBJEXT) sarpd-sad_crypto.$(OBJEXT) \
	sarpd-sarp_crypto.$(OBJEXT) sarpd-sad_key.$(OBJEXT) \
	sarpd-strlcpy.$(OBJEXT) sarpd-strlcat.$(OBJEXT)
sarpd_OBJECTS = $(am_sarpd_OBJECTS)
sarpd_DEPENDENCIES =
sarpd_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/sarp-sarp_crypto.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarp-sarp_error.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarp-sarp_globals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarp-sarp_main.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarp-sarp_parser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_capture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_conf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_crypto.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_error.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_globals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_hash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_inet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_key.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_main.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_neigh.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_parser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_sarp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_signal.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sad_syslog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-sarp_crypto.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-strlcat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sarpd-strlcpy.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(sarp_SOURCES) $(sarpd_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(sarp_SOURCES) $(sarpd_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am $(top_srcdir)/Makefile.am.common $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sbindir)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) $$p $(DESTDIR)$(sbindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) $$p $(DESTDIR)$(sbindir)/$$f; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(sbindir)/$$f"; \
	  rm -f $(DESTDIR)$(sbindir)/$$f; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
sarp-sarp_main.$(OBJEXT): sarp_main.c
sarp-sarp_error.$(OBJEXT): sarp_error.c
sarp-sarp_parser.$(OBJEXT): sarp_parser.c
sarp-sarp_globals.$(OBJEXT): sarp_globals.c
sarp-sarp_crypto.$(OBJEXT): sarp_crypto.c
sarp$(EXEEXT): $(sarp_OBJECTS) $(sarp_DEPENDENCIES) 
	@rm -f sarp$(EXEEXT)
	$(LINK) $(sarp_LDFLAGS) $(sarp_OBJECTS) $(sarp_LDADD) $(LIBS)
sarpd-sad_main.$(OBJEXT): sad_main.c
sarpd-sad_debug.$(OBJEXT): sad_debug.c
sarpd-sad_error.$(OBJEXT): sad_error.c
sarpd-sad_signal.$(OBJEXT): sad_signal.c
sarpd-sad_globals.$(OBJEXT): sad_globals.c
sarpd-sad_parser.$(OBJEXT): sad_parser.c
sarpd-sad_syslog.$(OBJEXT): sad_syslog.c
sarpd-sad_capture.$(OBJEXT): sad_capture.c
sarpd-sad_conf.$(OBJEXT): sad_conf.c
sarpd-sad_hash.$(OBJEXT): sad_hash.c
sarpd-sad_sarp.$(OBJEXT): sad_sarp.c
sarpd-sad_neigh.$(OBJEXT): sad_neigh.c
sarpd-sad_inet.$(OBJEXT): sad_inet.c
sarpd-sad_crypto.$(OBJEXT): sad_crypto.c
sarpd-sarp_crypto.$(OBJEXT): sarp_crypto.c
sarpd-sad_key.$(OBJEXT): sad_key.c
sarpd-strlcpy.$(OBJEXT): missing/strlcpy.c
sarpd-strlcat.$(OBJEXT): missing/strlcat.c
sarpd$(EXEEXT): $(sarpd_OBJECTS) $(sarpd_DEPENDENCIES) 
	@rm -f sarpd$(EXEEXT)
	$(LINK) $(sarpd_LDFLAGS) $(sarpd_OBJECTS) $(sarpd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarp-sarp_crypto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarp-sarp_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarp-sarp_globals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarp-sarp_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarp-sarp_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_capture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_crypto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_globals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_inet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_neigh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_sarp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_signal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sad_syslog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-sarp_crypto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-strlcat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sarpd-strlcpy.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

sarp-sarp_main.o: sarp_main.c
@AMDEP_TRUE@	source='sarp_main.c' object='sarp-sarp_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_main.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_main.o `test -f 'sarp_main.c' || echo '$(srcdir)/'`sarp_main.c

sarp-sarp_main.obj: sarp_main.c
@AMDEP_TRUE@	source='sarp_main.c' object='sarp-sarp_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_main.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_main.obj `cygpath -w sarp_main.c`

sarp-sarp_error.o: sarp_error.c
@AMDEP_TRUE@	source='sarp_error.c' object='sarp-sarp_error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_error.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_error.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_error.o `test -f 'sarp_error.c' || echo '$(srcdir)/'`sarp_error.c

sarp-sarp_error.obj: sarp_error.c
@AMDEP_TRUE@	source='sarp_error.c' object='sarp-sarp_error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_error.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_error.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_error.obj `cygpath -w sarp_error.c`

sarp-sarp_parser.o: sarp_parser.c
@AMDEP_TRUE@	source='sarp_parser.c' object='sarp-sarp_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_parser.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_parser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_parser.o `test -f 'sarp_parser.c' || echo '$(srcdir)/'`sarp_parser.c

sarp-sarp_parser.obj: sarp_parser.c
@AMDEP_TRUE@	source='sarp_parser.c' object='sarp-sarp_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_parser.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_parser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_parser.obj `cygpath -w sarp_parser.c`

sarp-sarp_globals.o: sarp_globals.c
@AMDEP_TRUE@	source='sarp_globals.c' object='sarp-sarp_globals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_globals.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_globals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_globals.o `test -f 'sarp_globals.c' || echo '$(srcdir)/'`sarp_globals.c

sarp-sarp_globals.obj: sarp_globals.c
@AMDEP_TRUE@	source='sarp_globals.c' object='sarp-sarp_globals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_globals.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_globals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_globals.obj `cygpath -w sarp_globals.c`

sarp-sarp_crypto.o: sarp_crypto.c
@AMDEP_TRUE@	source='sarp_crypto.c' object='sarp-sarp_crypto.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_crypto.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_crypto.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_crypto.o `test -f 'sarp_crypto.c' || echo '$(srcdir)/'`sarp_crypto.c

sarp-sarp_crypto.obj: sarp_crypto.c
@AMDEP_TRUE@	source='sarp_crypto.c' object='sarp-sarp_crypto.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarp-sarp_crypto.Po' tmpdepfile='$(DEPDIR)/sarp-sarp_crypto.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarp_CFLAGS) $(CFLAGS) -c -o sarp-sarp_crypto.obj `cygpath -w sarp_crypto.c`

sarpd-sad_main.o: sad_main.c
@AMDEP_TRUE@	source='sad_main.c' object='sarpd-sad_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_main.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_main.o `test -f 'sad_main.c' || echo '$(srcdir)/'`sad_main.c

sarpd-sad_main.obj: sad_main.c
@AMDEP_TRUE@	source='sad_main.c' object='sarpd-sad_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_main.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_main.obj `cygpath -w sad_main.c`

sarpd-sad_debug.o: sad_debug.c
@AMDEP_TRUE@	source='sad_debug.c' object='sarpd-sad_debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_debug.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_debug.o `test -f 'sad_debug.c' || echo '$(srcdir)/'`sad_debug.c

sarpd-sad_debug.obj: sad_debug.c
@AMDEP_TRUE@	source='sad_debug.c' object='sarpd-sad_debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_debug.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_debug.obj `cygpath -w sad_debug.c`

sarpd-sad_error.o: sad_error.c
@AMDEP_TRUE@	source='sad_error.c' object='sarpd-sad_error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_error.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_error.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_error.o `test -f 'sad_error.c' || echo '$(srcdir)/'`sad_error.c

sarpd-sad_error.obj: sad_error.c
@AMDEP_TRUE@	source='sad_error.c' object='sarpd-sad_error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_error.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_error.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_error.obj `cygpath -w sad_error.c`

sarpd-sad_signal.o: sad_signal.c
@AMDEP_TRUE@	source='sad_signal.c' object='sarpd-sad_signal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_signal.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_signal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_signal.o `test -f 'sad_signal.c' || echo '$(srcdir)/'`sad_signal.c

sarpd-sad_signal.obj: sad_signal.c
@AMDEP_TRUE@	source='sad_signal.c' object='sarpd-sad_signal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_signal.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_signal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_signal.obj `cygpath -w sad_signal.c`

sarpd-sad_globals.o: sad_globals.c
@AMDEP_TRUE@	source='sad_globals.c' object='sarpd-sad_globals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_globals.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_globals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_globals.o `test -f 'sad_globals.c' || echo '$(srcdir)/'`sad_globals.c

sarpd-sad_globals.obj: sad_globals.c
@AMDEP_TRUE@	source='sad_globals.c' object='sarpd-sad_globals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_globals.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_globals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_globals.obj `cygpath -w sad_globals.c`

sarpd-sad_parser.o: sad_parser.c
@AMDEP_TRUE@	source='sad_parser.c' object='sarpd-sad_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_parser.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_parser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_parser.o `test -f 'sad_parser.c' || echo '$(srcdir)/'`sad_parser.c

sarpd-sad_parser.obj: sad_parser.c
@AMDEP_TRUE@	source='sad_parser.c' object='sarpd-sad_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_parser.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_parser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_parser.obj `cygpath -w sad_parser.c`

sarpd-sad_syslog.o: sad_syslog.c
@AMDEP_TRUE@	source='sad_syslog.c' object='sarpd-sad_syslog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_syslog.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_syslog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_syslog.o `test -f 'sad_syslog.c' || echo '$(srcdir)/'`sad_syslog.c

sarpd-sad_syslog.obj: sad_syslog.c
@AMDEP_TRUE@	source='sad_syslog.c' object='sarpd-sad_syslog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_syslog.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_syslog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_syslog.obj `cygpath -w sad_syslog.c`

sarpd-sad_capture.o: sad_capture.c
@AMDEP_TRUE@	source='sad_capture.c' object='sarpd-sad_capture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_capture.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_capture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_capture.o `test -f 'sad_capture.c' || echo '$(srcdir)/'`sad_capture.c

sarpd-sad_capture.obj: sad_capture.c
@AMDEP_TRUE@	source='sad_capture.c' object='sarpd-sad_capture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_capture.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_capture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_capture.obj `cygpath -w sad_capture.c`

sarpd-sad_conf.o: sad_conf.c
@AMDEP_TRUE@	source='sad_conf.c' object='sarpd-sad_conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_conf.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_conf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_conf.o `test -f 'sad_conf.c' || echo '$(srcdir)/'`sad_conf.c

sarpd-sad_conf.obj: sad_conf.c
@AMDEP_TRUE@	source='sad_conf.c' object='sarpd-sad_conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_conf.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_conf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_conf.obj `cygpath -w sad_conf.c`

sarpd-sad_hash.o: sad_hash.c
@AMDEP_TRUE@	source='sad_hash.c' object='sarpd-sad_hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_hash.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_hash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_hash.o `test -f 'sad_hash.c' || echo '$(srcdir)/'`sad_hash.c

sarpd-sad_hash.obj: sad_hash.c
@AMDEP_TRUE@	source='sad_hash.c' object='sarpd-sad_hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_hash.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_hash.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_hash.obj `cygpath -w sad_hash.c`

sarpd-sad_sarp.o: sad_sarp.c
@AMDEP_TRUE@	source='sad_sarp.c' object='sarpd-sad_sarp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_sarp.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_sarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_sarp.o `test -f 'sad_sarp.c' || echo '$(srcdir)/'`sad_sarp.c

sarpd-sad_sarp.obj: sad_sarp.c
@AMDEP_TRUE@	source='sad_sarp.c' object='sarpd-sad_sarp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_sarp.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_sarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_sarp.obj `cygpath -w sad_sarp.c`

sarpd-sad_neigh.o: sad_neigh.c
@AMDEP_TRUE@	source='sad_neigh.c' object='sarpd-sad_neigh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_neigh.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_neigh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_neigh.o `test -f 'sad_neigh.c' || echo '$(srcdir)/'`sad_neigh.c

sarpd-sad_neigh.obj: sad_neigh.c
@AMDEP_TRUE@	source='sad_neigh.c' object='sarpd-sad_neigh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_neigh.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_neigh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_neigh.obj `cygpath -w sad_neigh.c`

sarpd-sad_inet.o: sad_inet.c
@AMDEP_TRUE@	source='sad_inet.c' object='sarpd-sad_inet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_inet.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_inet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_inet.o `test -f 'sad_inet.c' || echo '$(srcdir)/'`sad_inet.c

sarpd-sad_inet.obj: sad_inet.c
@AMDEP_TRUE@	source='sad_inet.c' object='sarpd-sad_inet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_inet.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_inet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_inet.obj `cygpath -w sad_inet.c`

sarpd-sad_crypto.o: sad_crypto.c
@AMDEP_TRUE@	source='sad_crypto.c' object='sarpd-sad_crypto.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_crypto.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_crypto.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_crypto.o `test -f 'sad_crypto.c' || echo '$(srcdir)/'`sad_crypto.c

sarpd-sad_crypto.obj: sad_crypto.c
@AMDEP_TRUE@	source='sad_crypto.c' object='sarpd-sad_crypto.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_crypto.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_crypto.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_crypto.obj `cygpath -w sad_crypto.c`

sarpd-sarp_crypto.o: sarp_crypto.c
@AMDEP_TRUE@	source='sarp_crypto.c' object='sarpd-sarp_crypto.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sarp_crypto.Po' tmpdepfile='$(DEPDIR)/sarpd-sarp_crypto.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sarp_crypto.o `test -f 'sarp_crypto.c' || echo '$(srcdir)/'`sarp_crypto.c

sarpd-sarp_crypto.obj: sarp_crypto.c
@AMDEP_TRUE@	source='sarp_crypto.c' object='sarpd-sarp_crypto.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sarp_crypto.Po' tmpdepfile='$(DEPDIR)/sarpd-sarp_crypto.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sarp_crypto.obj `cygpath -w sarp_crypto.c`

sarpd-sad_key.o: sad_key.c
@AMDEP_TRUE@	source='sad_key.c' object='sarpd-sad_key.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_key.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_key.o `test -f 'sad_key.c' || echo '$(srcdir)/'`sad_key.c

sarpd-sad_key.obj: sad_key.c
@AMDEP_TRUE@	source='sad_key.c' object='sarpd-sad_key.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-sad_key.Po' tmpdepfile='$(DEPDIR)/sarpd-sad_key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-sad_key.obj `cygpath -w sad_key.c`

sarpd-strlcpy.o: missing/strlcpy.c
@AMDEP_TRUE@	source='missing/strlcpy.c' object='sarpd-strlcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-strlcpy.Po' tmpdepfile='$(DEPDIR)/sarpd-strlcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-strlcpy.o `test -f 'missing/strlcpy.c' || echo '$(srcdir)/'`missing/strlcpy.c

sarpd-strlcpy.obj: missing/strlcpy.c
@AMDEP_TRUE@	source='missing/strlcpy.c' object='sarpd-strlcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-strlcpy.Po' tmpdepfile='$(DEPDIR)/sarpd-strlcpy.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-strlcpy.obj `cygpath -w missing/strlcpy.c`

sarpd-strlcat.o: missing/strlcat.c
@AMDEP_TRUE@	source='missing/strlcat.c' object='sarpd-strlcat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-strlcat.Po' tmpdepfile='$(DEPDIR)/sarpd-strlcat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-strlcat.o `test -f 'missing/strlcat.c' || echo '$(srcdir)/'`missing/strlcat.c

sarpd-strlcat.obj: missing/strlcat.c
@AMDEP_TRUE@	source='missing/strlcat.c' object='sarpd-strlcat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sarpd-strlcat.Po' tmpdepfile='$(DEPDIR)/sarpd-strlcat.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sarpd_CFLAGS) $(CFLAGS) -c -o sarpd-strlcat.obj `cygpath -w missing/strlcat.c`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(sbindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-sbinPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am uninstall-sbinPROGRAMS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-sbinPROGRAMS distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am uninstall-sbinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
