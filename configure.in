dnl
dnl    sarpd -- configure script
dnl
dnl    Copyright (C) 2001  ALoR <alor@blackhats.it>
dnl
dnl    This program is free software; you can redistribute it and/or modify
dnl    it under the terms of the GNU General Public License as published by
dnl    the Free Software Foundation; either version 2 of the License, or
dnl    (at your option) any later version.
dnl
dnl    This program is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl    GNU General Public License for more details.
dnl
dnl    You should have received a copy of the GNU General Public License
dnl    along with this program; if not, write to the Free Software
dnl    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl

AC_INIT(include/sad_main.h)
AM_INIT_AUTOMAKE(sarpd, 0.0)

AM_CONFIG_HEADER(include/config.h)

echo "char configure_line[[]] = \"$0 $*\";" > ./include/sad_debug_info.h

SB=`./shtool echo -n -e %B`
EB=`./shtool echo -n -e %b`

AC_SUBST(SB)
AC_SUBST(EB)

VERSION=`grep SAD_VERSION ./include/sad_version.h | cut -f2 -d"\""`
AC_SUBST(VERSION)

PROG=`grep PROGRAM ./include/sad_version.h | cut -f2 -d"\""`
AC_SUBST(PROG)

SAD_MESSAGE(Configuring $PROG-$VERSION)


dnl ================
dnl   Check the OS
dnl ================

AC_CANONICAL_HOST

case "$host_os" in
*linux*)
   SAD_LINUX_KERNEL()
   ;;
*)
   echo
   echo "NOT A SUPPORTED SYSTEM / OR SYSTEM NOT RECOGNIZED"
   echo
   exit 1
   ;;
esac

dnl ======================
dnl   Initialize prefix.
dnl ======================

AC_PREFIX_DEFAULT(/usr/local)

if test "$prefix" = "NONE"; then
   prefix="/usr/local"
fi


dnl ========================
dnl   Check the C compiler
dnl ========================

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_GCC_TRADITIONAL

dnl ======================
dnl   Machine Endianness
dnl ======================

AC_C_BIGENDIAN

dnl =====================================
dnl   Check for /proc/sys/net/ipv4/sarp
dnl =====================================

AH_TEMPLATE(HAVE_PROC_NET_SARP, [proc support for sercure ARP])

AC_PATH_PROGS(PROCNETSARP,sarp,no,/proc/sys/net/ipv4)
if test "$PROCNETSARP" = no; then
   AC_MSG_WARN(********************************************)
   AC_MSG_WARN(* /proc/sys/net/ipv4/sarp not found !!     *)
   AC_MSG_WARN(* please enable Secure ARP in your kernel. *)
   AC_MSG_WARN(*                                          *)
   AC_MSG_WARN(* patch the kernel or install the LKM...   *)
   AC_MSG_WARN(* look in the kernel dir                   *)
   AC_MSG_WARN(********************************************)
else
   AC_DEFINE(HAVE_PROC_NET_SARP)
fi

dnl ==========================
dnl   Check for /dev/urandom
dnl ==========================

AH_TEMPLATE(HAVE_DEV_URANDOM, [dev/urandom support for RAND])

AC_MSG_CHECKING(for /dev/urandom)
if test -c /dev/urandom; then
   AC_DEFINE(HAVE_DEV_URANDOM)
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

AH_TEMPLATE(HAVE_DEV_RANDOM, [dev/random support for RAND])

AC_MSG_CHECKING(for /dev/random)
if test -c /dev/random; then
   AC_DEFINE(HAVE_DEV_RANDOM)
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

dnl =====================
dnl   Check for headers
dnl =====================

AC_HEADER_STDC
AC_HEADER_DIRENT
AC_HEADER_TIME

dnl These are required !!
AC_CHECK_HEADERS(unistd.h stdlib.h signal.h stdarg.h sys/ioctl.h sys/types.h errno.h,,
   AC_MSG_WARN(****************************************************);
   AC_MSG_WARN(* REQUIRED !! I cant believe you don't have this !!*);
   AC_MSG_WARN(****************************************************);
   exit 1)

AC_CHECK_HEADERS(getopt.h)
AC_CHECK_HEADERS(fcntl.h ctype.h)
AC_CHECK_HEADERS(sys/types.h stdint.h)
AC_CHECK_HEADERS(sys/time.h sys/utsname.h)


dnl ==================================================================
dnl   Checks for typedefs, structures, and compiler characteristics.
dnl ==================================================================

AC_STRUCT_TM
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_C_CONST

dnl =====================
dnl   Check for libs
dnl =====================

AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getifaddrs)
AC_CHECK_FUNCS(vsnprintf)
AC_CHECK_FUNCS(select strdup strerror strstr strsignal)
AC_CHECK_FUNCS(uname)


dnl ===============================
dnl   Check for non standard libs
dnl ===============================


AC_CHECK_FUNCS(getopt_long strlcat strlcpy strsep memmem)


dnl =======================================
dnl   Check user defined --enable-FEATURE
dnl =======================================

SAD_MESSAGE(Checking user defined options)

dnl -----------
dnl -- DEBUG --
dnl -----------

AH_TEMPLATE(DEBUG, [debug support])

ac_cv_sad_debug=no
AC_MSG_CHECKING([if --enable-debug option is specified])
AC_ARG_ENABLE(debug, [  --enable-debug          create a file for debugging messages.],
[ case "$enableval" in
   yes)
      AC_DEFINE(DEBUG, 1)
      CFLAGS="$CFLAGS -g -ggdb -Wmissing-prototypes -Werror -Wall"
      AC_MSG_RESULT(yes)
      ac_cv_sad_debug=yes
      ;;
   no)  AC_MSG_RESULT(no.)
      CFLAGS="$CFLAGS -O3 -funroll-loops -fomit-frame-pointer -Wall"
      ac_cv_sad_debug=no
      ;;
esac ],
   AC_MSG_RESULT(no. disabled by default.)
   CFLAGS="$CFLAGS -O3 -funroll-loops -fomit-frame-pointer -Wall"
   ac_cv_sad_debug=no
)

dnl ==================================================
dnl   Check for libpcap , libnet, libnetlink, libssl
dnl ==================================================
ac_cv_sad_libpcap=default
ac_cv_sad_libnet=default
ac_cv_sad_libnetlink=default
ac_cv_sad_libssl=default

AC_MSG_CHECKING(for libpcap)
AC_ARG_WITH(libpcap,
[  --with-libpcap=DIR      use libpcap in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/pcap.h -a -f $withval/libpcap.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        PCAPINC="-I$withval"
        PCAPLIB="-L$withval -lpcap"
        ac_cv_sad_libpcap=$withval
     elif test -f $withval/include/pcap.h -a \
               -f $withval/include/net/bpf.h -a \
               -f $withval/lib/libpcap.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        PCAPINC="-I$withval/include"
        PCAPLIB="-L$withval/lib -lpcap"
        ac_cv_sad_libpcap=$withval
     else
        AC_ERROR(pcap.h net/bpf.h or libpcap.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f /usr/include/pcap/pcap.h; then
     PCAPINC="-I/usr/include/pcap"
     PCAPLIB="-lpcap"
  elif test -f /usr/include/pcap.h; then
     PCAPLIB="-lpcap"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(libpcap >= 0.7.1 not found)
  fi
  AC_MSG_RESULT(yes) ]
)

dnl Checks for libnet
AC_MSG_CHECKING(for libnet)
AC_ARG_WITH(libnet,
[  --with-libnet=DIR       use libnet in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/include/libnet.h -a -f $withval/src/libnet.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        if test -f $withval/bin/libnet-config; then
           LNETINC="`$withval/bin/libnet-config --defines`"
        elif test -f $withval/libnet-config; then
           LNETINC="`$withval/libnet-config --defines`"
        else
           LNETINC="`libnet-config --defines`"
        fi
        LNETINC="$LNETINC -I$withval/include"
        LNETLIB="-L$withval/src `$withval/libnet-config --libs`"
        ac_cv_sad_libnet=$withval
     else
        AC_ERROR(libnet.h or libnet.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f /usr/include/libnet.h; then
     LNETINC="`libnet-config --defines`"
     LNETLIB="`libnet-config --libs`"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(libnet >= 1.1.0 not found)
  fi
  AC_MSG_RESULT(yes) ]
)

dnl Checks for libnetlink
AC_MSG_CHECKING(for libnetlink)
AC_ARG_WITH(libnetlink,
[  --with-libnetlink=DIR   use libnetlink in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/include/libnetlink.h -a -f $withval/include/utils.h \
     -a -f $withval/lib/libnetlink.a -a -f $withval/lib/libutil.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        NLINKINC="-I$withval/include"
        NLINKLIB="-L$withval/lib -lnetlink -lutil"
        ac_cv_sad_libnetlink=$withval
     else
        AC_ERROR(libnetlink.h utils.h libnetlink.a or libutil.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f /usr/include/libnetlink.h; then
     NLINKLIB="-lnetlink -lutil"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(libnetlink --iproute2 Alexey Kuznetsov-- not found)
  fi
  AC_MSG_RESULT(yes) ]
)


dnl Checks for openssl
AC_MSG_CHECKING(for openssl)
AC_ARG_WITH(openssl,
[  --with-openssl=DIR   use openssl in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/include/openssl/ssl.h -a -f $withval/libcripto.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        SSLINC="-I$withval/include"
        SSLLIB="-L$withval -lcrypto"
        ac_cv_sad_libssl=$withval
     elif test -f $withval/ssl/include/openssl/ssl.h -a \
               -f $withval/ssl/lib/libcrypto.a; then
        owd=`pwd`
        if cd $withval; then withval=`pwd`; cd $owd; fi
        SSLINC="-I$withval/ssl/include"
        SSLLIB="-L$withval/ssl/lib -lcrypto"
        ac_cv_sad_libssl=$withval
     else
        AC_ERROR(ssl.h or libssl.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f /usr/include/openssl/ssl.h; then
     SSLLIB="-lcrypto"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(openssl not found)
  fi
  AC_MSG_RESULT(yes) ]
)

AH_TEMPLATE(OPENSSL_PATH, [openssl executable path])

AC_PATH_PROGS(OPENSSL_PATH, openssl,, $PATH:/usr/local/ssl/bin:${prefix}/bin:$withval/bin:$withval/ssl/bin)
if test -n "$OPENSSL_PATH"; then
  AC_DEFINE_UNQUOTED(OPENSSL_PATH, "$OPENSSL_PATH")
  ac_cv_sad_openssl=$OPENSSL_PATH
else
  AC_DEFINE_UNQUOTED(OPENSSL_PATH, "")
fi


SAD_CFLAGS="$CFLAGS $PCAPINC $LNETINC $NLINKINC $SSLINC"
SAD_LIBS="$LIBS $PCAPLIB $LNETLIB $NLINKLIB $SSLLIB"

AC_SUBST(SAD_CFLAGS)
AC_SUBST(SAD_LIBS)

SARP_CFLAGS="$CFLAGS $SSLINC"
SARP_LIBS="$LIBS $SSLLIB"

AC_SUBST(SARP_CFLAGS)
AC_SUBST(SARP_LIBS)

dnl ========================
dnl   MODULE CONFIGURATION
dnl ========================

SAD_MESSAGE(Checking for kernel module configuration)

AC_MSG_CHECKING(for /boot/System.map)
if test -f /boot/System.map; then
   AC_MSG_RESULT(yes)
   SYM_CHECK_MAP=`grep -w dev_add_pack /boot/System.map | awk {'print "0x"$1'}`
   SYM_CHECK_LIVE=`/sbin/ksyms -a | grep dev_add_pack | awk {'print "0x"$1'}`
else
   AC_MSG_RESULT(no)
   AC_MSG_WARN(******************************)
   AC_MSG_WARN(* /boot/System.map not found *)
   AC_MSG_WARN(* please create it.          *)
   AC_MSG_WARN(******************************)
   SYM_CHECK_MAP=""
   SYM_CHECK_LIVE=""
fi

AC_MSG_CHECKING(if System.map is up to date)

if test "$SYM_CHECK_MAP" != "$SYM_CHECK_LIVE"; then
   AC_MSG_RESULT(no)
	AC_MSG_WARN("+++++++++++++++++++++++++++++++++++++")
	AC_MSG_WARN(" Please update your /boot/System.map ") 
	AC_MSG_WARN(" Your running kernel doesn't         ")
   AC_MSG_WARN(" match your /boot/System.map         ") 
	AC_MSG_WARN("+++++++++++++++++++++++++++++++++++++")
else
   AC_MSG_RESULT(yes)
fi


dnl ===============
dnl   FINISHED !!
dnl ===============

AC_SUBST(COPTS)

SAD_MESSAGE(Writing output files)

AC_OUTPUT(packaging/rpm/sarpd.spec man/sarpd.8 man/sarp.8 etc/init.d/sarpd 
Makefile man/Makefile src/Makefile include/Makefile kernel/module/Makefile)

chmod 0700 etc/init.d/sarpd

dnl ============================
dnl   FOR DEBUGING INFORMATIONS 
dnl ============================

if test ${ac_cv_sad_debug} = "yes"; then
   echo "char configure_debug[[]] = \"${ac_cv_sad_debug}\";" >> ./include/sad_debug_info.h
fi

dnl ===============
dnl   THE SUMMARY
dnl ===============


SAD_MESSAGE(Sarpd has been configured as follow)

echo "=================================================="
echo
   SAD_CHECK_OPTION(" Install directory: ",${prefix})
echo
echo
   SAD_CHECK_OPTION(" DEBUG mode ....... ",${ac_cv_sad_debug})
   SAD_CHECK_OPTION(" LIBPCAP .......... ",${ac_cv_sad_libpcap})
   SAD_CHECK_OPTION(" LIBNET ........... ",${ac_cv_sad_libnet})
   SAD_CHECK_OPTION(" LIBNETLINK ....... ",${ac_cv_sad_libnetlink})
   SAD_CHECK_OPTION(" LIBSSL ........... ",${ac_cv_sad_libssl})
   SAD_CHECK_OPTION(" OPENSSL .......... ",${ac_cv_sad_openssl})
echo
echo "=================================================="
echo





dnl vim:ts=3:expandtab

