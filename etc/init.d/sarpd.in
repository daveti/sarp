#!/bin/bash
#
#	/etc/rc.d/init.d/sarpd
#
# Starts the Secure ARP daemon
#
# chkconfig: 345 01 99
# description: Handle S-ARP packets 
# processname: sarpd

# Source function library.
. /etc/rc.d/init.d/functions


prefix=@prefix@
exec_prefix=@exec_prefix@
sbindir=@sbindir@

DAEMON=sarp
PROGNAME=${DAEMON}d

RETVAL=0

#
# See how we were called.
#

start() {
   # check if the daemon exist
   if ! test -x "${sbindir}/$PROGNAME"; then
      action $"Searching for ${sbindir}/$PROGNAME" /bin/false
	   RETVAL=$?
      return $RETVAL
   fi
   
   # If SARP isn't supported by the kernel, try loading the module...
   [ -e /proc/sys/net/ipv4/sarp ] || action $"Loading sarpd kernel module" /sbin/modprobe sarp

   # If /proc/sys/net/ipv4/sarp still doesn't exist, kernel doesn't have
   # support for SARP.
   [ -e /proc/sys/net/ipv4/sarp ] || return 0

	# Check if it is already running
	if [ ! -f /var/lock/subsys/$PROGNAME ]; then
	    action $"Starting $DAEMON daemon: " ${sbindir}/$PROGNAME
	    RETVAL=$?
	    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$PROGNAME
	    echo
	fi
	return $RETVAL
}

stop() {
	action $"Stopping $DAEMON daemon: " killproc ${sbindir}/$PROGNAME
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$PROGNAME
	echo
   return $RETVAL
}


restart() {
	stop
	start
}	

reload() {
	trap "" SIGHUP
	killall -HUP $PROGNAME
}	

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
reload)
	reload
	;;
restart)
	restart
	;;
condrestart)
	if [ -f /var/lock/subsys/$PROGNAME ]; then
	    restart
	fi
	;;
status)
	status $PROGNAME
	;;
*)
	INITNAME=`basename $0`
	echo "Usage: $INITNAME {start|stop|restart|condrestart|status}"
	exit 1
esac

exit $RETVAL
